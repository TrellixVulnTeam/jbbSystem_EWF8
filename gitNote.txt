解决冲突
https://blog.csdn.net/mmbhs/article/details/38414773


从库里拉全部
git clone ssh://luruiyong@git.mioffice.cn:29418/miui/auto/omni/omni-java-case

change-id 丢失时添加
gitdir=$(git rev-parse --git-dir); scp -p -P 29418 luruiyong@gerrit.pt.miui.com:hooks/commit-msg ${gitdir}/hooks/

MIUIMTC-208

Signed-off-by: luruiyong <luruiyong@xiaomi.com>

git add
git commit -s  首次提交
git push ssh://luruiyong@gerrit.pt.miui.com:29418/miui/auto/omni/omni-java-case HEAD:refs/for/master

vim命令 :wq 保存并退出comments  或者连续两次答谢字母Z

git官网：https://git-scm.com/

git教程：https://git-scm.com/book/zh/v2



Git 更像是一个小型的文件系统，提供了许多以此为基础构建的超强工具，而不只是一个简单的 VCS。


Windows 用户，我们希望你懂得如何使用命令窗口（Command Prompt）或 PowerShell。


执行 git clone 命令的时候，默认配置下远程 Git 仓库中的每一个文件的每一个版本都将被拉取下来。


    初次克隆某个仓库的时候，工作目录中的所有文件都属于 *已跟踪* 文件，并处于 *未修改* 状态。编辑过某些文件之后，
由于自上次提交后你对它们做了修改，Git 将它们标记为 *已修改* 文件。 我们逐步将这些修改过的文件放入 *暂存区* ，然后
*提交* 所有暂存了的修改，如此反复。


git status : 查看哪些文件处于什么状态
git add : 将这个命令理解为“添加内容到下一次提交中”；既，开始跟踪一个文件，并处于 *暂存状态* 。
git reset HEAD : 取消暂存
git diff : 当前做的哪些更新还没有暂存,有哪些更新已经暂存起来准备好了下次提交
git commit : 提交
git commit --amend : 将 *暂存区* 中的文件提交。
git commit -a : 自动把所有已经跟踪过的文件暂存起来一并提交，从而跳过 git add 步骤
git rm : 从已跟踪文件清单中移除（确切地说，是从暂存区域移除），然后提交
git rm -f : 删除之前修改过并且已经放到暂存区域的
git checkout : 撤销修改，还原成上次提交的。（慎用慎用）


命令 git add 开始跟踪一个文件，并处于暂存状态。
在 Changes to be committed 这行下面的，就说明是已暂存状态。

    修改了已被跟踪的文件，出现在 Changes not staged for commit 这行下面，说明已跟踪文件的内容发生了变化，但还没有放到暂存区。
要暂存这次更新，需要运行 git add 命令。
运行了 git add 之后又作了修订的文件，需要重新运行 git add 把最新版本重新暂存起来


忽略文件：
一般我们总会有些文件无需纳入 Git 的管理，也不希望它们总出现在未跟踪文件列表。 
通常都是些自动生成的文件，比如日志文件，或者编译过程中创建的临时文件等。

在这种情况下，我们可以创建一个名为 .gitignore 的文件，列出要忽略的文件模式。
cat .gitignore  查看忽略的文件类型


Android Studio出现问题：
1.使用本地的gradle：file->settings->gradle->use local gradle
2.build.gradle中的build版本修改为3.3.1
3.将gradle.wrapper...中的gradle版本修改为4.10.1即第一步中本地gradle的版本
4.点击snyc now进行同步，此时会在生成一个buile.gradle文件
5.将build.gradle中compile修改为implementation(除第一个compile不用修改)，同时将第5行的25.0.2修改为28.0.3
6.在build.gradle中的allProjects中添加一个google()



